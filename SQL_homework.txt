
C:\Users\smokovenko\Downloads\skillbox_sql_dump.sql


Домашнее задание к уроку 17.3:


1. Написать запрос для выбора студентов в порядке их регистрации на сервисе.


### Напишите Ваш запрос здесь ### 

mysql> SELECT name, registration_date FROM Students ORDER BY registration_date;


2. Написать запрос для выбора 5 самых дорогих курсов, на которых более 4 студентов, 
и которые длятся более 10 часов.


### Напишите Ваш запрос здесь ###


SELECT * FROM Courses WHERE duration > 10
AND students_count > 4
ORDER BY price DESC
LIMIT 5\G



3. Написать один (!) запрос, который выведет одновременно список из имен трёх самых 
молодых студентов, имен трёх самых старых учителей и названий трёх самых продолжительных курсов.


### Напишите Ваш запрос здесь ###




mysql> (SELECT name FROM Students ORDER BY age LIMIT 3)
    -> UNION
    -> (SELECT name FROM Teachers ORDER BY age DESC LIMIT 3)
    -> UNION
    -> (SELECT name FROM Courses ORDER BY duration LIMIT 3);

Домашнее задание к уроку 17.4:


1. Написать запрос для выбора среднего возраста всех учителей с зарплатой более 10 000.


### Напишите Ваш запрос здесь ###





mysql> SELECT AVG (age) FROM Teachers WHERE salary > 10000;

2. Написать запрос для расчета суммы, сколько будет стоить купить все курсы по дизайну.



### Напишите Ваш запрос здесь ###


mysql> SELECT SUM(price) as price_all_courses FROM Courses WHERE type = "DESIGN";



3. Написать запрос для расчёта, сколько минут (!) длятся все курсы по программированию.



### Напишите Ваш запрос здесь ###




mysql> SELECT SUM(duration) * 60 as duration_prog_min FROM Courses WHERE type = 'PROGRAMMING';




Домашнее задание к уроку 17.6:


1. Напишите запрос, который выводит сумму, сколько часов должен в итоге проучиться 
каждый студент (сумма длительности всех курсов на которые он подписан). 
В результате запрос возвращает две колонки: Имя Студента — Кол-во часов.



### Напишите Ваш запрос здесь ###


SELECT SUM(Courses.duration) as courses_duration, 
Students.name as student_name 
FROM Courses
JOIN Subscriptions ON Courses.id = Subscriptions.course_id
JOIN Students ON Students.id = Subscriptions.student_id
GROUP BY Students.id;



2. Напишите запрос, который посчитает для каждого учителя средний возраст его учеников.

В результате запрос возвращает две колонки: Имя Учителя — Средний Возраст Учеников.



### Напишите Ваш запрос здесь ###




SELECT Teachers.name, AVG(Students.age) as mean_age_students
FROM Teachers, Courses, Subscriptions, Students
WHERE Courses.id = Subscriptions.course_id AND Students.id = Subscriptions.student_id AND Teachers.id = Courses.teacher_id
GROUP BY Teachers.name

3. Напишите запрос, который выводит среднюю зарплату учителей для каждого типа курса 
(Дизайн/Программирование/Маркетинг и т.д.) 
В результате запрос возвращает две колонки: Тип Курса – Средняя зарплата.



### Напишите Ваш запрос здесь ###




SELECT Courses.type, AVG(Teachers.salary) as mean_salary
FROM Courses, Subscriptions, Teachers
WHERE Courses.id = Subscriptions.course_id AND Teachers.id = Courses.teacher_id
GROUP BY Courses.type;
